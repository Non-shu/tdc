<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.repository.mybatis.ApprovalLineMapper">

  <resultMap id="ApprovalLineMap" type="com.example.demo.domain.ApprovalLineVO">
    <id     property="lineId"     column="line_id"/>
    <result property="docId"      column="doc_id"/>
    <result property="stepNo"     column="step_no"/>
    <result property="approverId" column="approver_id"/>
    <result property="stepStatus" column="step_status"/>
    <result property="actedAt"    column="acted_at"/>
    <result property="commentTx"  column="comment_tx"/>
  </resultMap>

  <insert id="bulkInsert">
    INSERT INTO approval_line (doc_id, step_no, approver_id, step_status)
    VALUES
    <foreach collection="list" item="it" separator=",">
      (#{it.docId}, #{it.stepNo}, #{it.approverId}, COALESCE(#{it.stepStatus}, 'SUBMIT'))
    </foreach>
  </insert>

  <delete id="deleteByDocId">
    DELETE FROM approval_line WHERE doc_id = #{docId}
  </delete>

  <select id="selectByDocId" resultMap="ApprovalLineMap">
    SELECT line_id, doc_id, step_no, approver_id, step_status, acted_at, comment_tx
      FROM approval_line
     WHERE doc_id = #{docId}
     ORDER BY step_no ASC
  </select>

  <update id="updateStatus">
    UPDATE approval_line
       SET step_status = #{lineStatus}
     WHERE line_id = #{lineId}
  </update>

  <select id="findMyStepNo" resultType="int">
    SELECT step_no
      FROM approval_line
     WHERE doc_id = #{docId}
       AND approver_id = #{approverId}
     LIMIT 1
  </select>

  <!-- ★ 순차 강제: 내 step이 '미처리 최솟값'일 때만 승인 처리 -->
  <update id="approveMyLine">
    UPDATE approval_line l
    JOIN (
      SELECT MIN(step_no) AS cur_step
        FROM approval_line
       WHERE doc_id = #{docId}
         AND step_status IN ('SUBMIT','INPROG')
    ) s ON s.cur_step = l.step_no
       AND l.doc_id = #{docId}
       AND l.approver_id = #{approverId}
       AND l.step_status IN ('SUBMIT','INPROG')
    SET l.step_status = 'APPROVED',
        l.acted_at    = CURRENT_TIMESTAMP
  </update>

  <!-- ★ 순차 강제: 내 step이 '미처리 최솟값'일 때만 반려 처리 -->
  <update id="rejectMyLine">
    UPDATE approval_line l
    JOIN (
      SELECT MIN(step_no) AS cur_step
        FROM approval_line
       WHERE doc_id = #{docId}
         AND step_status IN ('SUBMIT','INPROG')
    ) s ON s.cur_step = l.step_no
       AND l.doc_id = #{docId}
       AND l.approver_id = #{approverId}
       AND l.step_status IN ('SUBMIT','INPROG')
    SET l.step_status = 'REJECTED',
        l.acted_at    = CURRENT_TIMESTAMP
  </update>

  <select id="countPendingInStep" resultType="int">
    SELECT COUNT(1)
      FROM approval_line
     WHERE doc_id = #{docId}
       AND step_no = #{stepNo}
       AND step_status IN ('SUBMIT','INPROG')
  </select>

  <!-- 다음 단계: ‘미처리(SUBMIT/INPROG)’ 라인이 존재하는 최솟값 -->
  <select id="findNextStepNo" resultType="int">
    SELECT MIN(step_no)
      FROM approval_line
     WHERE doc_id = #{docId}
       AND step_no > #{currentStepNo}
       AND step_status IN ('SUBMIT','INPROG')
  </select>

  <select id="selectWithNames" resultMap="ApprovalLineMap">
    SELECT l.line_id, l.doc_id, l.step_no, l.approver_id, l.step_status, l.acted_at, l.comment_tx,
           e.emp_nm AS approver_name
      FROM approval_line l
      JOIN emp e ON e.emp_id = l.approver_id
     WHERE l.doc_id = #{docId}
     ORDER BY l.step_no
  </select>

  <select id="canAct" resultType="boolean">
    SELECT CASE WHEN EXISTS (
      SELECT 1
        FROM approval_line me
       WHERE me.doc_id = #{docId}
         AND me.approver_id = #{approverId}
         AND me.step_status IN ('SUBMIT','INPROG')
         AND me.step_no = (
             SELECT MIN(l2.step_no)
               FROM approval_line l2
              WHERE l2.doc_id = #{docId}
                AND l2.step_status IN ('SUBMIT','INPROG')
         )
    ) THEN TRUE ELSE FALSE END
  </select>

  <select id="findLinesForDetail" resultType="com.example.demo.domain.ApprovalLineVO">
    SELECT l.doc_id,
           l.step_no      AS stepNo,
           l.approver_id  AS approverId,
           e.emp_nm       AS approverName,
           l.step_status  AS stepStatus,
           l.acted_at     AS actedAt
      FROM approval_line l
      JOIN emp e ON e.emp_id = l.approver_id
     WHERE l.doc_id = #{docId}
     ORDER BY l.step_no, l.line_id
  </select>

  <select id="existsMyPendingLine" resultType="int">
    SELECT COUNT(1)
      FROM approval_line
     WHERE doc_id = #{docId}
       AND approver_id = #{empId}
       AND step_status IN ('SUBMIT','INPROG')
  </select>

</mapper>
