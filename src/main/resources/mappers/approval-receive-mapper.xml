<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.repository.mybatis.ApprovalReceiveMapper">

  <!-- 화면 바인딩 -->
  <resultMap id="InboxMap" type="ApprovalInboxVO">
    <result column="doc_id"          property="docId"/>
    <result column="title"           property="title"/>
    <result column="drafter_nm"      property="drafterName"/>
    <result column="recv_status"     property="recvStatus"/>
    <result column="status_nm"       property="statusNm"/>
    <result column="notified_at_fmt" property="notifiedAt"/>
    <result column="read_at_fmt"     property="readAt"/>
    <result column="attach_cnt"      property="attachCnt"/>
  </resultMap>

  <!-- 공통 SELECT (loginId=emp_no) -->
  <sql id="inboxSelect">
    SELECT
      r.doc_id,
      d.title,
      drafter.emp_nm                               AS drafter_nm,
      r.recv_status,
      -- 상태 한글명 매핑(코드 테이블을 쓰거나 CASE로 매핑)
      CASE r.recv_status
        WHEN 'SUBMIT'   THEN '대기'
        WHEN 'INPROG'   THEN '진행'
        WHEN 'APPROVED' THEN '승인'
        WHEN 'REJECTED' THEN '반려'
        ELSE r.recv_status
      END                                           AS status_nm,
      DATE_FORMAT(r.notified_at, '%Y-%m-%d %H:%i')  AS notified_at_fmt,
      DATE_FORMAT(r.read_at,     '%Y-%m-%d %H:%i')  AS read_at_fmt,
      IFNULL(att.cnt,0)                             AS attach_cnt
    FROM approval_receive r
    JOIN approval_document d ON d.doc_id = r.doc_id
    JOIN emp drafter         ON drafter.emp_id = d.created_by   <!-- 작성자 컬럼: created_by -->
    LEFT JOIN (
      SELECT doc_id, COUNT(*) AS cnt
      FROM approval_attachment
      GROUP BY doc_id
    ) att ON att.doc_id = r.doc_id
    <where>
      r.approver_id = (SELECT emp_id FROM emp WHERE emp_no = #{loginId})
      <if test="status != null and status != ''">
        AND r.recv_status = #{status}
      </if>
      <if test="read != null and read != ''">
        AND (
          (#{read} = 'Y' AND r.read_at IS NOT NULL)
          OR
          (#{read} = 'N' AND r.read_at IS NULL)
        )
      </if>
      <if test="keyword != null and keyword != ''">
        AND (d.title  LIKE CONCAT('%', #{keyword}, '%')
          OR drafter.emp_nm LIKE CONCAT('%', #{keyword}, '%'))
      </if>
      <if test="from != null"> AND DATE(r.notified_at) <![CDATA[>=]]> #{from} </if>
      <if test="to   != null"> AND DATE(r.notified_at) <![CDATA[<=]]> #{to}   </if>
    </where>
  </sql>

  <select id="selectInbox" resultMap="InboxMap">
    <include refid="inboxSelect"/>
    ORDER BY r.notified_at DESC
    LIMIT #{limit} OFFSET #{offset}
  </select>

  <select id="countInbox" resultType="long">
    SELECT COUNT(1)
    FROM (
      <include refid="inboxSelect"/>
    ) t
  </select>

  <!-- 단건 수신행 생성(멱등) -->
  <insert id="insertReceive">
    INSERT INTO approval_receive (doc_id, approver_id, recv_status)
    VALUES (#{docId}, #{approverId}, #{recvStatus})
    ON DUPLICATE KEY UPDATE
      recv_status = VALUES(recv_status),
      notified_at = CURRENT_TIMESTAMP
  </insert>

  <!-- 1차 결재선 대상자들을 수신함에 생성(상신 시 호출) -->
  <insert id="insertFirstStepReceives">
    INSERT INTO approval_receive (doc_id, approver_id, recv_status)
    SELECT l.doc_id, l.approver_id, l.step_status
      FROM approval_line l
     WHERE l.doc_id = #{docId}
       AND l.step_no = 1
    ON DUPLICATE KEY UPDATE
      recv_status = VALUES(recv_status),
      notified_at = CURRENT_TIMESTAMP
  </insert>
  
  <update id="updateReceiveStatus">
  UPDATE approval_receive
     SET recv_status = #{status},
         read_at     = IFNULL(read_at, CURRENT_TIMESTAMP)
   WHERE doc_id = #{docId} AND approver_id = #{approverId}
</update>

<insert id="insertReceivesForStep">
  INSERT INTO approval_receive (doc_id, approver_id, recv_status)
  SELECT l.doc_id, l.approver_id, l.step_status
    FROM approval_line l
   WHERE l.doc_id = #{docId}
     AND l.step_no = #{stepNo}
  ON DUPLICATE KEY UPDATE
    recv_status = VALUES(recv_status),
    notified_at = CURRENT_TIMESTAMP
</insert>

<update id="closePendingReceives">
  UPDATE approval_receive
     SET recv_status = #{status}
   WHERE doc_id = #{docId}
     AND recv_status IN ('SUBMIT','INPROG')
</update>

</mapper>
